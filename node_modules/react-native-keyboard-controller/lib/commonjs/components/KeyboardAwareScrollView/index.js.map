{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeReanimated","_reactNativeKeyboardController","_useSmoothKeyboardHandler","_utils","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","KeyboardAwareScrollView","_ref","children","bottomOffset","rest","scrollViewAnimatedRef","useAnimatedRef","scrollPosition","useSharedValue","position","keyboardHeight","tag","initialKeyboardSize","scrollBeforeKeyboardMovement","input","useReanimatedFocusedInput","layout","height","useWindowDimensions","onScroll","useAnimatedScrollHandler","e","value","contentOffset","y","maybeScroll","useCallback","_layout$value","_layout$value2","animated","undefined","visibleRect","absoluteY","inputHeight","point","interpolatedScrollTo","interpolate","targetScrollY","Math","max","scrollTo","positionOnScreen","topOfScreen","onChangeText","_layout$value3","_input$value","prevScrollPosition","prevLayout","onChangeTextHandler","useMemo","debounce","useFocusedInputHandler","useSmoothKeyboardHandler","onStart","keyboardWillChangeSize","keyboardWillAppear","keyboardWillHide","focusWasChanged","onMove","onEnd","useAnimatedReaction","current","previous","view","useAnimatedStyle","paddingBottom","createElement","ScrollView","ref","scrollEventThrottle","View","style","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import React, { useCallback, useMemo } from \"react\";\nimport { useWindowDimensions } from \"react-native\";\nimport Reanimated, {\n  interpolate,\n  scrollTo,\n  useAnimatedReaction,\n  useAnimatedRef,\n  useAnimatedScrollHandler,\n  useAnimatedStyle,\n  useSharedValue,\n} from \"react-native-reanimated\";\n\nimport {\n  useFocusedInputHandler,\n  useReanimatedFocusedInput,\n} from \"react-native-keyboard-controller\";\n\nimport { useSmoothKeyboardHandler } from \"./useSmoothKeyboardHandler\";\nimport { debounce } from \"./utils\";\n\nimport type { FC } from \"react\";\nimport type { ScrollViewProps } from \"react-native\";\nimport type { FocusedInputLayoutChangedEvent } from \"react-native-keyboard-controller\";\n\ntype KeyboardAwareScrollViewProps = {\n  bottomOffset?: number;\n} & ScrollViewProps;\n\n/**\n * Everything begins from `onStart` handler. This handler is called every time,\n * when keyboard changes its size or when focused `TextInput` was changed. In\n * this handler we are calculating/memoizing values which later will be used\n * during layout movement. For that we calculate:\n * - layout of focused field (`layout`) - to understand whether there will be overlap\n * - initial keyboard size (`initialKeyboardSize`) - used in scroll interpolation\n * - future keyboard height (`keyboardHeight`) - used in scroll interpolation\n * - current scroll position (`scrollPosition`) - used to scroll from this point\n *\n * Once we've calculated all necessary variables - we can actually start to use them.\n * It happens in `onMove` handler - this function simply calls `maybeScroll` with\n * current keyboard frame height. This functions makes the smooth transition.\n *\n * When the transition has finished we go to `onEnd` handler. In this handler\n * we verify, that the current field is not overlapped within a keyboard frame.\n * For full `onStart`/`onMove`/`onEnd` flow it may look like a redundant thing,\n * however there could be some cases, when `onMove` is not called:\n * - on iOS when TextInput was changed - keyboard transition is instant\n * - on Android when TextInput was changed and keyboard size wasn't changed\n * So `onEnd` handler handle the case, when `onMove` wasn't triggered.\n *\n * ====================================================================================================================+\n * -----------------------------------------------------Flow chart-----------------------------------------------------+\n * ====================================================================================================================+\n *\n * +============================+       +============================+        +==================================+\n * +  User Press on TextInput   +   =>  +  Keyboard starts showing   +   =>   + As keyboard moves frame by frame +  =>\n * +                            +       +       (run `onStart`)      +        +    `onMove` is getting called    +\n * +============================+       +============================+        +==================================+\n *\n *\n * +============================+       +============================+        +=====================================+\n * + Keyboard is shown and we   +   =>  +    User moved focus to     +   =>   + Only `onStart`/`onEnd` maybe called +\n * +    call `onEnd` handler    +       +     another `TextInput`    +        +    (without involving `onMove`)     +\n * +============================+       +============================+        +=====================================+\n *\n */\nconst KeyboardAwareScrollView: FC<KeyboardAwareScrollViewProps> = ({\n  children,\n  bottomOffset = 0,\n  ...rest\n}) => {\n  const scrollViewAnimatedRef = useAnimatedRef<Reanimated.ScrollView>();\n  const scrollPosition = useSharedValue(0);\n  const position = useSharedValue(0);\n  const keyboardHeight = useSharedValue(0);\n  const tag = useSharedValue(-1);\n  const initialKeyboardSize = useSharedValue(0);\n  const scrollBeforeKeyboardMovement = useSharedValue(0);\n  const { input } = useReanimatedFocusedInput();\n  const layout = useSharedValue<FocusedInputLayoutChangedEvent | null>(null);\n\n  const { height } = useWindowDimensions();\n\n  const onScroll = useAnimatedScrollHandler(\n    {\n      onScroll: (e) => {\n        position.value = e.contentOffset.y;\n      },\n    },\n    [],\n  );\n\n  /**\n   * Function that will scroll a ScrollView as keyboard gets moving\n   */\n  const maybeScroll = useCallback(\n    (e: number, animated: boolean = false) => {\n      \"worklet\";\n\n      const visibleRect = height - keyboardHeight.value;\n      const absoluteY = layout.value?.layout.absoluteY || 0;\n      const inputHeight = layout.value?.layout.height || 0;\n      const point = absoluteY + inputHeight;\n\n      if (visibleRect - point <= bottomOffset) {\n        const interpolatedScrollTo = interpolate(\n          e,\n          [initialKeyboardSize.value, keyboardHeight.value],\n          [0, keyboardHeight.value - (height - point) + bottomOffset],\n        );\n        const targetScrollY =\n          Math.max(interpolatedScrollTo, 0) + scrollPosition.value;\n        scrollTo(scrollViewAnimatedRef, 0, targetScrollY, animated);\n\n        return interpolatedScrollTo;\n      }\n\n      if (absoluteY < 0) {\n        const positionOnScreen = visibleRect - inputHeight - bottomOffset;\n        const topOfScreen = scrollPosition.value + absoluteY;\n\n        scrollTo(\n          scrollViewAnimatedRef,\n          0,\n          topOfScreen - positionOnScreen,\n          animated,\n        );\n      }\n\n      return 0;\n    },\n    [bottomOffset],\n  );\n\n  const onChangeText = useCallback(() => {\n    \"worklet\";\n\n    // if typing a text caused layout shift, then we need to ignore this handler\n    // because this event will be handled in `useAnimatedReaction` below\n    if (layout.value?.layout.height !== input.value?.layout.height) {\n      return;\n    }\n\n    const prevScrollPosition = scrollPosition.value;\n    const prevLayout = layout.value;\n\n    scrollPosition.value = position.value;\n    layout.value = input.value;\n    maybeScroll(keyboardHeight.value, true);\n    scrollPosition.value = prevScrollPosition;\n    layout.value = prevLayout;\n  }, [maybeScroll]);\n  const onChangeTextHandler = useMemo(\n    () => debounce(onChangeText, 200),\n    [onChangeText],\n  );\n\n  useFocusedInputHandler(\n    {\n      onChangeText: onChangeTextHandler,\n    },\n    [onChangeTextHandler],\n  );\n\n  useSmoothKeyboardHandler(\n    {\n      onStart: (e) => {\n        \"worklet\";\n\n        const keyboardWillChangeSize =\n          keyboardHeight.value !== e.height && e.height > 0;\n        const keyboardWillAppear = e.height > 0 && keyboardHeight.value === 0;\n        const keyboardWillHide = e.height === 0;\n        const focusWasChanged =\n          (tag.value !== e.target && e.target !== -1) || keyboardWillChangeSize;\n\n        if (keyboardWillChangeSize) {\n          initialKeyboardSize.value = keyboardHeight.value;\n        }\n\n        if (keyboardWillHide) {\n          // on back transition need to interpolate as [0, keyboardHeight]\n          initialKeyboardSize.value = 0;\n          scrollPosition.value = scrollBeforeKeyboardMovement.value;\n        }\n\n        if (keyboardWillAppear || keyboardWillChangeSize || focusWasChanged) {\n          // persist scroll value\n          scrollPosition.value = position.value;\n          // just persist height - later will be used in interpolation\n          keyboardHeight.value = e.height;\n        }\n\n        // focus was changed\n        if (focusWasChanged) {\n          tag.value = e.target;\n\n          // save position of focused text input when keyboard starts to move\n          layout.value = input.value;\n          // save current scroll position - when keyboard will hide we'll reuse\n          // this value to achieve smooth hide effect\n          scrollBeforeKeyboardMovement.value = position.value;\n        }\n\n        if (focusWasChanged && !keyboardWillAppear) {\n          // update position on scroll value, so `onEnd` handler\n          // will pick up correct values\n          position.value += maybeScroll(e.height, true);\n        }\n      },\n      onMove: (e) => {\n        \"worklet\";\n\n        maybeScroll(e.height);\n      },\n      onEnd: (e) => {\n        \"worklet\";\n\n        keyboardHeight.value = e.height;\n        scrollPosition.value = position.value;\n      },\n    },\n    [height, maybeScroll],\n  );\n\n  useAnimatedReaction(\n    () => input.value,\n    (current, previous) => {\n      if (\n        current?.target === previous?.target &&\n        current?.layout.height !== previous?.layout.height\n      ) {\n        const prevLayout = layout.value;\n\n        layout.value = input.value;\n        scrollPosition.value += maybeScroll(keyboardHeight.value, true);\n        layout.value = prevLayout;\n      }\n    },\n    [],\n  );\n\n  const view = useAnimatedStyle(\n    () => ({\n      paddingBottom: keyboardHeight.value,\n    }),\n    [],\n  );\n\n  return (\n    <Reanimated.ScrollView\n      ref={scrollViewAnimatedRef}\n      {...rest}\n      onScroll={onScroll}\n      scrollEventThrottle={16}\n    >\n      <Reanimated.View style={view}>{children}</Reanimated.View>\n    </Reanimated.ScrollView>\n  );\n};\n\nexport default KeyboardAwareScrollView;\n"],"mappings":"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"}