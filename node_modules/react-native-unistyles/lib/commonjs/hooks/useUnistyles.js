"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useUnistyles = void 0;
var _reactNative = require("react-native");
var _react = require("react");
var _core = require("../core");
var _common = require("../common");
const unistylesEvents = new _reactNative.NativeEventEmitter(_reactNative.NativeModules.Unistyles);
const useUnistyles = () => {
  const [plugins, setPlugins] = (0, _react.useState)(_core.unistyles.runtime.enabledPlugins);
  const [theme, setTheme] = (0, _react.useState)(_core.unistyles.registry.getTheme(_core.unistyles.runtime.themeName));
  const [contentSizeCategory, setContentSizeCategory] = (0, _react.useState)(_core.unistyles.runtime.contentSizeCategory);
  const [layout, setLayout] = (0, _react.useState)({
    breakpoint: _core.unistyles.runtime.breakpoint,
    orientation: _core.unistyles.runtime.orientation,
    screenSize: {
      width: _core.unistyles.runtime.screen.width,
      height: _core.unistyles.runtime.screen.height
    }
  });
  (0, _react.useEffect)(() => {
    const subscription = unistylesEvents.addListener('__unistylesOnChange', event => {
      switch (event.type) {
        case _common.UnistylesEventType.Theme:
          {
            const themeEvent = event;
            return setTheme(_core.unistyles.registry.getTheme(themeEvent.payload.themeName));
          }
        case _common.UnistylesEventType.Layout:
          {
            const layoutEvent = event;
            return setLayout({
              breakpoint: layoutEvent.payload.breakpoint,
              orientation: layoutEvent.payload.orientation,
              screenSize: layoutEvent.payload.screen
            });
          }
        case _common.UnistylesEventType.Plugin:
          {
            return setPlugins(_core.unistyles.runtime.enabledPlugins);
          }
        case _common.UnistylesEventType.DynamicTypeSize:
          {
            const dynamicTypeSizeEvent = event;
            return setContentSizeCategory(dynamicTypeSizeEvent.payload.contentSizeCategory);
          }
        default:
          return;
      }
    });
    return subscription.remove;
  }, []);
  return {
    plugins,
    theme,
    layout,
    contentSizeCategory
  };
};
exports.useUnistyles = useUnistyles;
//# sourceMappingURL=useUnistyles.js.map